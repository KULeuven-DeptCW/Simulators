!	' |\t|\n' ;		/~ Characters to be ignored... ~/

	'\('			/~ Non-associative tokens ~/
	'\)'
	'[a-zA-Z]' 	CHAR	[* %match=parseInt(%match); *]
	'\*'           /~ Kleene star ~/
	'\|'           /~ Disjunctive operator ~/
	;


##

/~
	--- And here's the grammar specification ---
~/

p:	e					[* rgResult = %1; *]
	;
e: 	  CHAR					[*%% = new rgChr(%1); *]
        | e e                                   [*%% = new rgCat(%1,%2); *]
        | '(' e ')'                             [*%% = %1; *]
	| e '*' 				[*%% = new rgStr(%1); *]
	| e '|' e                               [*%% = new rgDsj(%1,%3); *]
	;

[*
var rgResult;
var rgError_cnt = 0;
var rgError_off = new Array();
var rgError_la = new Array();
function rgparse (str) {
	var str = str.toUpperCase();
	rgError_off = new Array();
	rgError_la = new Array();
	if((rgError_cnt = __##PREFIX##parse(str,rgError_off,rgError_la)) > 0) {
		rgResult = null;
	} else {
		//alert(rgResult.tostring());
	}
}
*]

